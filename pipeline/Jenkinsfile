pipeline {
  agent any

  environment {
    S3_BUCKET = 'pcip-sdk-node.pcip.barte.com'
    AWS_REGION = 'us-east-1'
  }

  stages {
    stage('Build') {
      agent {
        docker {
          image 'node:20-alpine'
          args '-v $WORKSPACE:$WORKSPACE -w $WORKSPACE'
        }
      }
      steps {
        sh 'npm install'
        sh 'npm run build'
        sh 'ls -l dist'  // para garantir que dist foi criado
      }
    }

    stage('Deploy to S3') {
      agent {
        docker {
          image 'amazon/aws-cli:2.12.5'
          // monta o workspace explicitamente para garantir acesso ao dist/
          args "-v ${env.WORKSPACE}:${env.WORKSPACE} -w ${env.WORKSPACE} --entrypoint=\"\""
        }
      }
      steps {
        withCredentials([usernamePassword(credentialsId: 'AWS_CREDENTIALS_PCI', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
          sh '''
            ls -l dist
            echo "Cleaning up S3 bucket..."
            aws s3 rm s3://${S3_BUCKET} --recursive --region ${AWS_REGION}

            echo "Uploading files to S3 bucket..."
            aws s3 cp dist/index.html s3://${S3_BUCKET}/ --region ${AWS_REGION}
            aws s3 cp dist/script.min.js s3://${S3_BUCKET}/ --region ${AWS_REGION}
            aws s3 cp dist/sdk.min.js s3://${S3_BUCKET}/ --region ${AWS_REGION}
          '''
        }
      }
    }
  }
}
